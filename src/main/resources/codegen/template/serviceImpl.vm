package ${basePackage}.service.${modelName}.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.xl.base.dao.common.PagingList;
import com.xl.base.dao.common.QueryParamMap;
import com.xl.base.service.impl.AbstractService;
import ${basePackage}.dao.${modelName}.I${entityName}Dao;
import ${basePackage}.entity.${modelName}.${entityName};
import ${basePackage}.service.${modelName}.I${entityName}Service;
import ${basePackage}.vo.${modelName}.${entityName}Vo;

@Transactional
@Component("$StringUtil.firstToLower($entityName)Service")
public class ${entityName}ServiceImpl extends AbstractService<${entityName},I${entityName}Dao> implements I${entityName}Service {
	#set ( $lowCaseEntityName = $StringUtil.firstToLower("$entityName") )
@Autowired
	private I${entityName}Dao ${lowCaseEntityName}Dao;
	
	@Transactional(propagation=Propagation.NOT_SUPPORTED, readOnly=true)
	public PagingList<$entityName> select${entityName}List(${entityName}Vo ${lowCaseEntityName}Vo){
		
		//设置查询条件
		QueryParamMap<String, Object> paramMap = setSelectCondition(${lowCaseEntityName}Vo);
	
		//分页标识
		int pageSize = ${StringUtil.firstToLower($entityName)}Vo.getPageSize() == null ? 20 : Integer.parseInt( ${lowCaseEntityName}Vo.getPageSize() );
		int curPage = ${StringUtil.firstToLower($entityName)}Vo.getPageNo() == null ? 1 : Integer.parseInt( ${lowCaseEntityName}Vo.getPageNo() );
		
		PagingList<$entityName> pagingList = listRecords(pageSize, curPage, paramMap);
		return pagingList;
	}
	
	public boolean insert$entityName(${entityName}Vo ${lowCaseEntityName}Vo){
		$entityName entity = convertVo2Entity(${lowCaseEntityName}Vo);
		
		//TODO
		
		${lowCaseEntityName}Dao.insert(entity);
		
		return true;
	}

	public boolean update$entityName(${entityName}Vo ${lowCaseEntityName}Vo){
		${entityName} $lowCaseEntityName = ${lowCaseEntityName}Dao.load(${lowCaseEntityName}Vo.getId());
		
		//TODO
		${lowCaseEntityName}Dao.update($lowCaseEntityName);
		
		return true;
	}
	
	//把Vo转换为Entity
	private $entityName convertVo2Entity(${entityName}Vo vo){
		$entityName entity = new ${entityName}();
		#foreach($c in $tMapperMetaData.allCMapperMetaDatas)
		
		#if ( $c.beanPropertyName != "id" && $c.beanPropertyName != "createTime" ) entity.set$StringUtil.capitalize("$c.beanPropertyName")(vo.get$StringUtil.capitalize("$c.beanPropertyName")()); #end
		#end
		
		return entity;
	}
	
	
	//设置查询条件
	private QueryParamMap<String, Object> setSelectCondition(${entityName}Vo $StringUtil.firstToLower($entityName)Vo){
		QueryParamMap<String, Object> paramMap = new QueryParamMap<String, Object>();
		
		return paramMap;
	}
	
	public I${entityName}Dao getDao() {
		return $StringUtil.firstToLower($entityName)Dao;
	}
	
}